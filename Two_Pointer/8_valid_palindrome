#https://neetcode.io/problems/is-palindrome?list=neetcode150
'''
Given a string s, return true if it is a palindrome, otherwise return false.
A palindrome is a string that reads the same forward and backward. It is also case-insensitive and ignores all non-alphanumeric characters.
Note: Alphanumeric characters consist of letters (A-Z, a-z) and numbers (0-9).

Example 1:
Input: s = "Was it a car or a cat I saw?"
Output: true
'''

'''
Very simple two pointer problem,
we just track l and r, from 0 and len -1, and bring them inwards
as we do we compare the letters for a match

if were not on an alphabet character or number we need to skip it, this can be done neatly in a while loop
    i did if as it doesnt add run time but it couldve been done as while l < r and not s[l].isalnum(): l+=1 
        and same for r of course

Note when comparing do .lower() to ignore capitalization
'''

def isPalindrome( s) -> bool:
    l, r = 0, len(s)-1

    while l<r:
        if not s[l].isalnum():
            l+=1
        
        if not s[r].isalnum():
            r-=1
        
        if s[l].isalnum() and s[r].isalnum():
            if s[l].lower() != s[r].lower():
                return False
            l+=1
            r-=1
    
    return True
        